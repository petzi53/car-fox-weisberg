{
  "hash": "f24e08767eb9d09364000ab030a78414",
  "result": {
    "engine": "knitr",
    "markdown": "# Exploring and Transforming Data {#sec-chap03}\n\n\n\n\n\n\n\n::::: {#obj-chap03}\n:::: {.my-objectives}\n::: {.my-objectives-header}\nChapter section list\n:::\n\n::: {.my-objectives-container}\n\n- Examing distribution (@sec-chap03-1)\n    - Histograms (@sec-chap03-1-1)\n    - Density estimation (@sec-chap03-1-2)\n    - Quantile-comparison plots (@sec-chap03-1-3)\n    \n\n\n\n:::\n::::\n:::::\n\n## Examing distributions {#sec-chap03-1}\n\n### Histograms {#sec-chap03-1-1}\n\n> The shape of the histogram is determined in part by the number of bins and the location of their boundaries. With too few bins, the histogram can hide interesting features of the data, while with too many bins, the histogram is very rough, displaying spurious features of the data.\n\nThe help page for `ggplot2::geom_histogram()` recommends: \"You should always override this [default] value, exploring multiple widths to find the best to illustrate the stories in your data.\"\n\nThere are several algorithm to calculate an optimal number of bins depending of the sample size and distribution. Fox/Weisberg mention the rule by Freedman and Diaconis [-@freedman1981a]:\n\n$$\n\\frac{n^\\frac{1}{3}(max-min)}{2(Q_{3}-Q_{1})}\n$$ {#eq-chap03-FD}\n\n:::::{.my-example}\n:::{.my-example-header}\n:::::: {#exm-chap03-histograms}\n: Histograms\n::::::\n:::\n::::{.my-example-container}\n\n::: {.panel-tabset}\n\n###### base R\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-default-base-r-histogram}\n: Default base R histogram\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap03-default-base-r-histogram}\n\n::: {.cell}\n\n```{.r .cell-code}\nPrestige <- carData::Prestige\n\nbase::with(Prestige, graphics::hist(income))\n```\n\n::: {.cell-output-display}\n![](03-exploring-data_files/figure-html/default-base-r-histogram-1.png){width=672}\n:::\n:::\n\nDefault\tbase R histogram of income in the Canadian occupational-prestige data\n:::\n\n::::\n:::::\n\n###### FD rule\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-compute-bins-FD}\n: Compute number of bins with the Freedman-Diaconis rule [-@freedman1981a]\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-compute-bins-FD}\n\n::: {.cell}\n\n```{.r .cell-code}\nIncome <- Prestige$income\n    \nbase::ceiling(\n    base::length(Income)^(1/3) * \n    (base::max(Income) - base::min(Income)) / \n    (2 * (stats::quantile(Income, 0.75) \n          - stats::quantile(Income, 0.25)))[[1]]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 15\n```\n\n\n:::\n:::\n\n\nCompute number of bins of `income` with the Freedman-Diaconis rule [-@freedman1981a]\n:::\n\n::::\n:::::\n\n\n###### base R 2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-fd-base-r-histogram2}\n: Base R histogram with `breaks = \"FD\"`\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap03-fd-base-r-histogram2}\n\n::: {.cell}\n\n```{.r .cell-code}\nbase::with(Prestige, graphics::hist(income, breaks = \"FD\"))\n```\n\n::: {.cell-output-display}\n![](03-exploring-data_files/figure-html/fd-base-r-histogram2-1.png){width=672}\n:::\n:::\n\n\nBase R histogram: Number of bins computed after Freedman and Diaconis [-@freedman1981a]\n:::\n\n::::\n:::::\n\n\n\n###### ggplot2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-default-ggplot2-histogram}\n: Histogram with {**ggplot2**} (30 bins default)\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap03-default-ggplot2-histogram}    \n\n::: {.cell}\n\n```{.r .cell-code}\nPrestige |> \n    ggplot2::ggplot(\n        ggplot2::aes(x = income)\n    ) +\n    ggplot2::geom_histogram(\n        fill = \"grey\",\n        color = \"black\"\n        )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](03-exploring-data_files/figure-html/default-ggplot2-histogram-1.png){width=672}\n:::\n:::\n\n\nHistogram with {**ggplot2**} with default number of bins (30)\n:::\n\n::::\n:::::\n\n###### ggplot2 2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-default-ggplot2-histogram2}\n: Histogram with {**ggplot2**} with bin number computed after Freedman & Diaconis\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap03-default-ggplot2-histogram2}    \n\n::: {.cell}\n\n```{.r .cell-code}\nPrestige |> \n    ggplot2::ggplot(\n        ggplot2::aes(x = income)\n    ) +\n    ggplot2::geom_histogram(\n        fill = \"grey\",\n        color = \"black\",\n        bins = grDevices::nclass.FD(Prestige$income)\n        )\n```\n\n::: {.cell-output-display}\n![](03-exploring-data_files/figure-html/default-ggplot2-histogram2-1.png){width=672}\n:::\n:::\n\n\nHistogram with {**ggplot2**}. Bin number computed after Freedman and Diaconis [-@freedman1981a]\n:::\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\n### Density Estimation {#sec-chap03-1-2}\n\n*Nonparametric density estimation* often produces a more satisfactory representation of the distribution of a numeric variable than a traditional histogram. Unlike a histogram, a nonparametric density estimate is continuous and so it doesn’t dissect the range of a numeric variable into discrete bins.\n\nKernel density estimation (KDE) is the application of kernel smoothing for probability density estimation. The bandwith controls\tthe\tdegree of smoothness of\tthe density\testimate:\n\nThe bandwidth of a density estimate is the continuous analog of the bin width of a histogram: If the bandwidth is too large, then the density estimate is smooth but biased as an estimator of the true density, while if the bandwidth is too small, then bias is low but the estimate is too rough and the variance of the estimator is large. \n\nThe `adaptiveKernel()` function in the {**car**} package employs an algorithm that uses different bandwidths depending on the local observed density of the data, with smaller bandwidths in dense regions and larger bandwidths in sparse regions.\n\n\n\n\n:::::{.my-example}\n:::{.my-example-header}\n:::::: {#exm-chap03-density-estimation}\n: Density estimation\n::::::\n:::\n::::{.my-example-container}\n\n::: {.panel-tabset}\n\n###### stats::density() 1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-density1}\n: Nonparametric fixed-bandwidth and adaptive-bandwidth kernel density estimates `(adjust = 1)`\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap03-density1}\n\n::: {.cell}\n\n```{.r .cell-code}\nwith(Prestige, {\n    hist(\n        income,\n        freq = FALSE,\n        ylim = c(0, 1.5e-4),\n        breaks = \"FD\",\n        main = \"\"\n    )\n    lines(density(income, from = 0), lwd = 3, lty = 2)\n    lines(car::adaptiveKernel(income, from = 0, adjust = 1),\n          lwd = 2,\n          lty = 1) # solid line\n    rug(income)\n    legend(\n        \"topright\",\n        c(\"Fixed bandwidth\", \"Adaptive bandwidth\"),\n        lty = 2:1, # dashed with proportion 2:1\n        lwd = 2,\n        inset = .02\n    )\n    box()\n})\n```\n\n::: {.cell-output-display}\n![](03-exploring-data_files/figure-html/density1-1.png){width=672}\n:::\n:::\n\nNonparametric fixed-bandwidth and adaptive-bandwidth kernel density estimates (adjust = 1) for the distribution of income in the `Prestige` data set; a density histogram of income is also shown. The rug-plot at the bottom of the graph shows the location of the income values.\n:::\n\n***\n\nThe command to draw the graph in @lst-chap03-density1 is relatively complicated and thus requires some explanation: \n\n- The `base::with()` function is used as usual to pass the data frame `Prestige` to the second argument. Here the second argument is a compound expression consisting of all the commands between the initial { and the final }. \n- The call to `graphics::hist()` draws a histogram in density scale, so the areas of all the bars in the histogram sum to 1. \n- The argument `main=\"\"` suppresses the title for the histogram. \n- The `ylim` argument sets the range for the y-axis to be large enough to accommodate the adaptive-kernel density estimate. The value 1.5e-4 is in scientific notation, 1.5 × 10−4 = 0.00015. \n- The fixed-bandwidth and adaptive-bandwidth kernel estimates are computed, respectively, by `stats::density()` and `car::adaptiveKernel()`. \n- In each case, the result returned by the function is then supplied as an argument to the `graphics::lines()` function to add the density estimate to the graph. \n- The argument `from = 0` to both `density()` and `adaptiveKernel()` ensures that the density estimates don’t go below income = 0. \n- The call to `graphics::rug()` draws a rug-plot (one-dimensional scatterplot) of the data at the bottom of the graph. \n- The remaining two commands add a legend and a frame around the graph.\n\n\n\n\n::::\n:::::\n\nBoth nonparametric density estimates and the histogram suggest a mode at around $5,000, and all three show that the distribution of income is rightskewed. The fixed-bandwidth kernel estimate has more wiggle at the right where data are sparse, and the histogram is rough in this region, while the adaptive-kernel estimator is able to smooth out the density estimate in the low-density region. \n\n\n###### stats::density() 2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-density2}\n: Nonparametric fixed-bandwidth and adaptive-bandwidth kernel density estimates `(adjust = 0.5)`\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap03-density2}    \n\n::: {.cell}\n\n```{.r .cell-code}\nwith(Prestige, {\n    hist(\n        income,\n        freq = FALSE,\n        ylim = c(0, 1.5e-4),\n        breaks = \"FD\",\n        main = \"\"\n    )\n    lines(density(income, from = 0), lwd = 3, lty = 2)\n    lines(car::adaptiveKernel(income, from = 0, adjust = 0.5),\n          lwd = 2,\n          lty = 1) # solid\n    rug(income)\n    legend(\n        \"topright\",\n        c(\"Fixed bandwidth\", \"Adaptive bandwidth\"),\n        lty = 2:1, # dashed with proportion 2:1\n        lwd = 2,\n        inset = .02\n    )\n    box()\n})\n```\n\n::: {.cell-output-display}\n![](03-exploring-data_files/figure-html/density2-1.png){width=672}\n:::\n:::\n\n\nNonparametric fixed-bandwidth and adaptive-bandwidth kernel density estimates (adjust = 0.5) for the distribution of `income` in the `Prestige` data set; a density histogram of `income` is also shown. The rug-plot at the bottom of the graph shows the location of the `income` values.\n:::\n\n::::\n:::::\n\n###### ggplot2::geom_density()\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-density-ggplot2}\n: Histogram, rug and smoothed density estimate\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-density-ggplot2}\n\n::: {.cell}\n\n```{.r .cell-code}\nPrestige |> \n    ggplot2::ggplot(\n        ggplot2::aes(x = income)\n    ) +\n    ggplot2::geom_histogram(\n        ggplot2::aes(y = ggplot2::after_stat(density)),\n        color = \"black\",\n        fill = \"grey\",\n        bins = grDevices::nclass.FD(Prestige$income)\n    ) +\n    ggplot2::geom_density(\n        adjust = 1,\n        kernel = \"gaussian\",\n        color = \"red\",\n        linewidth = 1\n    ) +\n    ggplot2::geom_rug()\n```\n\n::: {.cell-output-display}\n![](03-exploring-data_files/figure-html/density-ggplot2-1.png){width=672}\n:::\n:::\n\n\nHistogram with a kernel density estimate overlaid, which is a smoothed version of the histogram. The rug-plot at the bottom of the graph shows the location of the `income` values from the `Prestige` dataset.\n:::\n\n::::\n:::::\n\nI didn't know how to include the adaptive kernel density estimation from the {**car**} package to get a full reproduction of book’s Figure 3.3.\n\n###### my_hist_dnorm()\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-my-hist-dnorm}\n: Using my own function to create a histogram with density estimate and overlaid dnorm curve\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap03-my-hist-dnorm}\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_hist_dnorm(Prestige, Prestige$income)\n```\n\n::: {.cell-output-display}\n![](03-exploring-data_files/figure-html/my-hist-dnorm-1.png){width=672}\n:::\n:::\n\n\nHistogram with density estimation and overlaid dnorm curve\n:::\n\n***\n\nI have my own function my_hist_dnorm() changed by supplying the Freeman-Diaconis rule [-@freedman1981a] as default value for the number of bins.\n\n::::\n:::::\n\n\n:::\n\n::::\n:::::\n\n### Quantile-comparison plots {#sec-chap03-1-3}\n\nA *quantile-comparison plot*, or quantile-quantile plot (<a class='glossary' title='A quantile-quantile plot is a visualization of data using probabilities to show how closely a variable follows a normal distribution. (SwR, Glossary) This plot is made up of points below which a certain percentage of the observations fall. On the x-axis are normally distributed values with a mean of 0 and a standard deviation of 1. On the y-axis are the observations from the data. If the data are normally distributed, the values will form a diagonal line through the graph. (SwR, chapter 6)'>Q-Q-plot</a>), provides an effective graphical means of making the comparison, plotting the ordered data on the vertical axis against the corresponding quantiles of the reference distribution on the horizontal axis. If the data conform to the reference distribution, then the points in the quantile-comparison plot should fall close to a straight line, within sampling error.\n\n:::::{.my-example}\n:::{.my-example-header}\n:::::: {#exm-chap03-qq-plots}\n: Quantile-quantile plots\n::::::\n:::\n::::{.my-example-container}\n\n::: {.panel-tabset}\n\n###### stats::qqnorm()\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-stats-qqnorm}\n: Base R: Quantile-Quantile Plot\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap03-stats-qqnorm}\n\n::: {.cell}\n\n```{.r .cell-code}\nstats::qqnorm(Prestige$income,\n              ylab = \"Income\")\nstats::qqline(Prestige$income)\n```\n\n::: {.cell-output-display}\n![](03-exploring-data_files/figure-html/stats-qqnorm-1.png){width=672}\n:::\n:::\n\nNormal quantile-comparison plot\tfor\t`income` from the `Prestige` dataset.\n:::\n\n***\nMany points, especially at the right of the graph, are far from the line of the theoretical quantiles. We have therefore evidence that the distribution of `income` is not like a sample from a normal population.\n\n::::\n:::::\n\n\n###### car::qqPlot()\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-car-qqplot}\n: car: Quantile-quantile plot\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap03-car-qqplot}    \n\n::: {.cell}\n\n```{.r .cell-code}\ncar::qqPlot( ~ income, data = Prestige, id = list(n = 3))\n```\n\n::: {.cell-output-display}\n![](03-exploring-data_files/figure-html/car-qqplot-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> general.managers       physicians          lawyers \n#>                2               24               17\n```\n\n\n:::\n:::\n\n\nNormal quantile-comparison plot for `income.` \n:::\n***\nThe broken lines give a pointwise 95% confidence envelope around the fitted solid line. Three points were labeled automatically. Because many points, especially at the right of the graph, are outside the confidence bounds, we have evidence that the distribution of `income` is not like a sample from a normal population.\n\n::::\n:::::\n\nThe function `car::qqPLot()` has several advantages:\n\n1) It produces a pointwise 95% confidence envelope around the fitted solid line.\n2) It labels the most extreme data points.\n3) The `car::qqPlot()` function can be used to plot the data against *any* reference distribution.\n\n###### my_qq_plot()\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap03-my-qq-plot}\n: Q-Q-plot using my own function applying {**ggplot2**}\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap03-my-qq-plot}\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_qq_plot(Prestige, Prestige$income)\n```\n\n::: {.cell-output-display}\n![](03-exploring-data_files/figure-html/my-qq-plot-1.png){width=672}\n:::\n:::\n\n\nQ-Q-plot: Comparing data points against a normal distribution \n:::\n\n***\n\nMy own function lacks the confidence interval cannot label the most extreme points. I have to think if and how I could add these features to `my_qq_plot()`.\n\n::::\n:::::\n\n\n:::\n\n::::\n:::::\n\n***\n",
    "supporting": [
      "03-exploring-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}