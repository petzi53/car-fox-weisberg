{
  "hash": "a331cfe65ded01831c0de538ef0e9388",
  "result": {
    "engine": "knitr",
    "markdown": "# Reading & Manipulating Data {#sec-chap02}\n\n\n\n\n\n\n## Table of content for chapter 02\n\n::::: {#obj-chap02}\n:::: {.my-objectives}\n::: {.my-objectives-header}\nChapter section list\n:::\n\n::: {.my-objectives-container}\n\n- Data Input\n    - Accessing data from a package (@sec-chap02-1-1)\n    - ~~Entering a data frame directly (empty)~~ (@sec-chap02-1-2)\n\n\n\n:::\n::::\n:::::\n\n\n## Data Input \n\n### Accessing data from a package {#sec-chap02-1-1}\n\nThere are two ways to access data from a package:\n\n- Loading the package with `base::library(<packageName>)`\n- Accessing with `utils::data(\"<dataName>\", package = \"<packageName>\")` without first loading the package\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-chap02-load-data-display-extract}\n: Load data and display a data extract with different methods\n::::::\n:::\n::::{.my-r-code-container}\n::: {#lst-chap02-load-data-display-extract}\n\n::: {.cell}\n\n```{.r .cell-code}\nutils::data(\"Davis\", package = \"carData\")\n\nglue::glue(\"---------------------------------------------------------------------\")\nglue::glue(\"utils::str: Compactly Display the Structure of an Arbitrary R Object\")\nglue::glue(\"---------------------------------------------------------------------\")\nutils::str(Davis)\n\nglue::glue(\" \")\nglue::glue(\"---------------------------------------------------------------------\")\nglue::glue(\"car::brief: Print Abbreviated Ouput\")\nglue::glue(\"---------------------------------------------------------------------\")\ncar::brief(Davis)\n\nglue::glue(\" \")\nglue::glue(\"---------------------------------------------------------------------\")\nglue::glue(\"my_glance_data: my own function\")\nglue::glue(\"---------------------------------------------------------------------\")\nmy_glance_data(Davis)\n\nglue::glue(\" \")\nglue::glue(\"---------------------------------------------------------------------\")\nglue::glue(\"dplyr::glimpse: Get a glimpse of your data\")\nglue::glue(\"---------------------------------------------------------------------\")\ndplyr::glimpse(Davis)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ---------------------------------------------------------------------\n#> utils::str: Compactly Display the Structure of an Arbitrary R Object\n#> ---------------------------------------------------------------------\n#> 'data.frame':\t200 obs. of  5 variables:\n#>  $ sex   : Factor w/ 2 levels \"F\",\"M\": 2 1 1 2 1 2 2 2 2 2 ...\n#>  $ weight: int  77 58 53 68 59 76 76 69 71 65 ...\n#>  $ height: int  182 161 161 177 157 170 167 186 178 171 ...\n#>  $ repwt : int  77 51 54 70 59 76 77 73 71 64 ...\n#>  $ repht : int  180 159 158 175 155 165 165 180 175 170 ...\n#>  \n#> ---------------------------------------------------------------------\n#> car::brief: Print Abbreviated Ouput\n#> ---------------------------------------------------------------------\n#> 200 x 5 data.frame (195 rows omitted)\n#>     sex weight height repwt repht\n#>     [f]    [i]    [i]   [i]   [i]\n#> 1   M       77    182    77   180\n#> 2   F       58    161    51   159\n#> 3   F       53    161    54   158\n#> . . .                                 \n#> 199 M       90    181    91   178\n#> 200 M       79    177    81   178\n#>  \n#> ---------------------------------------------------------------------\n#> my_glance_data: my own function\n#> ---------------------------------------------------------------------\n#>          obs sex weight height repwt repht\n#> 1          1   M     77    182    77   180\n#> 49        49   F     54    174    56   173\n#> 65        65   M     97    189    98   185\n#> 74        74   F     56    163    57   159\n#> 122      122   M     69    167    73   165\n#> 128      128   F     45    157    45   153\n#> 146      146   F     55    160    55   155\n#> 153      153   F     47    150    45   152\n#> 200...9  200   M     79    177    81   178\n#> 200...10 200   M     79    177    81   178\n#>  \n#> ---------------------------------------------------------------------\n#> dplyr::glimpse: Get a glimpse of your data\n#> ---------------------------------------------------------------------\n#> Rows: 200\n#> Columns: 5\n#> $ sex    <fct> M, F, F, M, F, M, M, M, M, M, M, F, F, F, F, F, M, F, M, F, M, …\n#> $ weight <int> 77, 58, 53, 68, 59, 76, 76, 69, 71, 65, 70, 166, 51, 64, 52, 65…\n#> $ height <int> 182, 161, 161, 177, 157, 170, 167, 186, 178, 171, 175, 57, 161,…\n#> $ repwt  <int> 77, 51, 54, 70, 59, 76, 77, 73, 71, 64, 75, 56, 52, 64, 57, 66,…\n#> $ repht  <int> 180, 159, 158, 175, 155, 165, 165, 180, 175, 170, 174, 163, 158…\n```\n\n\n:::\n:::\n\nAccessing data from a package and using different methods for displaying a data extract\n:::\n\n***\n\nThere is a problem with the data files from the {**carData**} package: The files have relevant information in the row names. But row names are not part of the data frame. This can be easily seen by applying functions like `utils::str()` or `dplyr::glimpse()`.\n\nThis is not a great deal here with the Davis data set as it only contains the index of the row numbers. But it is an annoying \"feature\" when it has important information that belong into a column of the data frame. We have already met such a data frame with `Duncan` in @lst-chap01-get-duncan-data. \n\n::::\n:::::\n\n\nSome packages require that you call the `utils::data()` function to use data frames in the package, even when the package is loaded. Other packages, like {**carData**}, use R’s lazy data mechanism to provide direct access to data frames when the package is loaded. On a package’s help page, accessed, for example, by `help(package=\"carData\")`, click on the link for the package `DESCRIPTION file`. Data frames are automatically available if the line `LazyData: yes` appears in the package description.\n\n### Entering a data frame directly (empty) {#sec-chap02-1-2}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}