# Packages used {#sec-annex-a}

## Amelia

:::::{.my-package}
:::{.my-package-header}
Amelia: A Program for Missing Data 
:::
::::{.my-package-container}

***

::: {#pak-Amelia}

***

{**Amelia**}: [A Program for Missing Data](https://gking.harvard.edu/amelia) [@Amelia]

A tool that "multiply imputes" missing data in a single cross-section (such as a survey), from a time series (like variables collected for each year in a country), or from a time-series-cross-sectional data set (such as collected by years for each of several countries). {**Amelia**} II implements our bootstrapping-based algorithm that gives essentially the same answers as the standard IP or EMis approaches, is usually considerably faster than existing approaches and can handle many more variables. Unlike Amelia I and other statistically rigorous imputation software, it virtually never crashes (but please let us know if you find to the contrary!). The program also generalizes existing approaches by allowing for trends in time series across observations within a cross-sectional unit, as well as priors that allow experts to incorporate beliefs they have about the values of missing cells in their data. {**Amelia**} II also includes useful diagnostics of the fit of multiple imputation models. The program works from the R command line or via a graphical user interface that does not require users to know R.

{**Amelia**}: A Program for Missing Data
:::



***
::::
:::::


## car

:::::{.my-package}
:::{.my-package-header}
car: Companion to Applied Regression 
:::
::::{.my-package-container}

***

::: {#pak-car}

***

{**car**}: [Companion to Applied Regression](https://www.john-fox.ca/Companion/index.html) [@car]

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-car-min.png){width="176"}

Functions to Accompany J. Fox and S. Weisberg, An R Companion to Applied Regression, Third Edition, Sage, 2019. [@fox2018]

:::
An R Companion to Applied Regression is a broad introduction to the R statistical computing environment in the context of applied regression analysis. The book provides a step-by-step guide to using the free statistical software R, and emphasizes integrating statistical computing in R with the practice of data analysis.  The R packages car and effects, written to facilitate the application and interpretation of regression analysis, are extensively covered in the book.

{**car**}: Companion to Applied Regression
:::

***
::::
:::::

## carData

:::::{.my-package}
:::{.my-package-header}
carData: Datasets to accompany J. Fox and S. Weisberg, An R Companion to Applied Regression, Third Edition, Sage (2019). 
:::
::::{.my-package-container}

***

::: {#pak-carData}

***

{**carData**}: [Datasets to accompany J. Fox and S. Weisberg, An R Companion to Applied Regression, Third Edition, Sage (2019).](https://www.john-fox.ca/Companion/) [@carData]

(*There is no hexagon logo for {**carData**} available*)

Datasets to accompany J. Fox and S. Weisberg, An R Companion to Applied Regression, Third Edition, Sage (2019). [@fox2018]

:::

{**carData**}: Datasets to accompany J. Fox and S. Weisberg, An R Companion to Applied Regression, Third Edition, Sage (2019).
:::

<Other text not included in the package reference>

***
::::
:::::



## effects

:::::{.my-package}
:::{.my-package-header}
effects: Effect Displays for Linear, Generalized Linear, and Other Models 
:::
::::{.my-package-container}

***

::: {#pak-effects}

***

{**effects**}: [Effect Displays for Linear, Generalized Linear, and Other Models](https://www.john-fox.ca/AppliedRegression/index.html) [@effects]

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-effects-min.png){width="176"}


Graphical and tabular effect displays, e.g., of interactions, for various statistical models with linear predictors.

:::

{**effects**}: Effect Displays for Linear, Generalized Linear, and Other Models
:::

<Other text not included in the package reference>

***
::::
:::::

## ggiraph

:::::{.my-package}
:::{.my-package-header}
ggiraph: Make 'ggplot2' Graphics Interactive 
:::
::::{.my-package-container}

***

::: {#pak-ggiraph}

***

{**ggiraph**}: [Make 'ggplot2' Graphics Interactive](https://davidgohel.github.io/ggiraph/) [@ggiraph]

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-ggiraph-min.png){width="176"}


Create interactive {**ggplot2**} graphics using {**htmlwidgets**}. {**ggiraph**} is a tool that allows you to create dynamic ggplot graphs. This allows you to add tooltips, hover effects and JavaScript actions to the graphics. The package also allows the selection of graphical elements when used in shiny applications.

:::

Interactivity is added to ggplot geometries, legends and theme elements, via the following aesthetics:

- **tooltip**: tooltips to be displayed when mouse is over elements.
- **onclick**: JavaScript function to be executed when elements are clicked.
- **data_id**: id to be associated with elements (used for hover and click actions)

{**ggiraph**}: Make 'ggplot2' Graphics Interactive
:::

<Other text not included in the package reference>

***
::::
:::::


## ggmice

:::::{.my-package}
:::{.my-package-header}
ggmice: Visualizations for 'mice' with 'ggplot2' 
:::
::::{.my-package-container}

***

::: {#pak-ggmice}

***

{**ggmice**}: [Visualizations for 'mice' with 'ggplot2'](https://amices.org/ggmice/) [@ggmice]

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-ggmice-min.png){width="176"}

Enhance a mice imputation workflow with visualizations for incomplete and/or imputed data. The ggmice functions produce ggplot objects which may be easily manipulated or extended. Use {**ggmice**} to inspect missing data, develop imputation models, evaluate algorithmic convergence, or compare observed versus imputed data.

:::

{**ggmice**}: Visualizations for 'mice' with 'ggplot2'
:::

<Other text not included in the package reference>

***
::::
:::::

## ggrepel

:::::{.my-package}
:::{.my-package-header}
ggrepel: Automatically Position Non-Overlapping Text Labels with 'ggplot2' 
:::
::::{.my-package-container}

***

::: {#pak-ggrepel}

***

{**ggrepel**}: [Automatically Position Non-Overlapping Text Labels with 'ggplot2'](https://ggrepel.slowkow.com/) [@ggrepel]

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-ggrepel-min.png){width="176"}


Provides text and label geoms for 'ggplot2' that help to avoid overlapping text labels. Labels repel away from each other and away from the data points.

:::

{**ggrepel**} provides two geoms for {**ggplot2**} to repel overlapping text labels:

- `ggrepel::geom_text_repel()`
- `ggrepel::geom_label_repel()`

{**ggrepel**}: A Package for Automatically Position Non-Overlapping Text Labels with 'ggplot2'
:::


***
::::
:::::



## glossary

:::::{.my-package}
:::{.my-package-header}
glossary: Glossaries for Markdown and Quarto Documents 
:::
::::{.my-package-container}

***

::: {#pak-glossary}

***

{**glossary**}: [Glossaries for Markdown and Quarto Documents](https://debruine.github.io/glossary/) [@glossary]

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-glossary-min.png){width="176"}

Add glossaries to markdown and quarto documents by tagging individual words. Definitions can be provided inline or in a separate file.


:::

There is a lot of necessary jargon to learn for coding. The goal of glossary is to provide a lightweight solution for making glossaries in educational materials written in quarto or R Markdown. This package provides functions to link terms in text to their definitions in an external glossary file, as well as create a glossary table of all linked terms at the end of a section.

{**glossary**}: Glossaries for Markdown and Quarto Documents
:::

<Other text not included in the package reference>

***
::::
:::::

## glue

:::::{.my-package}
:::{.my-package-header}
glue: Interpreted String Literals
:::
::::{.my-package-container}

***

::: {#pak-glue}

***

{**glue**}: [Interpreted String Literals](https://glue.tidyverse.org/)

An implementation of interpreted string literals, inspired by Python's Literal String Interpolation

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-glue-min.png){width="176"}

Glue offers interpreted string literals that are small, fast, and dependency-free. Glue does this by embedding R expressions in curly braces which are then evaluated and inserted into the argument string.

:::

{**glue**}: A Package for Interpreting Literal Strings
:::



***
::::
:::::


## mi

:::::{.my-package}
:::{.my-package-header}
mi: Missing Data Imputation and Model Checking 
:::
::::{.my-package-container}

***

::: {#pak-mi}

***

{**mi**}: [Missing Data Imputation and Model Checking](https://cran.r-project.org/package=mi) [@mi]


The {**mi**} package provides functions for data manipulation, imputing missing values in an approximate Bayesian framework, diagnostics of the models used to generate the imputations, confidence-building mechanisms to validate some of the assumptions of the imputation algorithm, and functions to analyze multiply imputed data sets with the appropriate degree of sampling uncertainty.

{**mi**}: Missing Data Imputation and Model Checking
:::

***
::::
:::::

## mice

:::::{.my-package}
:::{.my-package-header}
mice: Multivariate Imputation by Chained Equations 
:::
::::{.my-package-container}

***

::: {#pak-mice}

***

{**mice**}: [Multivariate Imputation by Chained Equations](https://amices.org/mice/) [@mice]

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-mice-min.png){width="176"}


The {**mice**} package implements a method to deal with missing data. The package creates multiple imputations (replacement values) for multivariate missing data. The method is based on Fully Conditional Specification, where each incomplete variable is imputed by a separate model. The MICE algorithm can impute mixes of continuous, binary, unordered categorical and ordered categorical data. In addition, MICE can impute continuous two-level data, and maintain consistency between imputations by means of passive imputation. Many diagnostic plots are implemented to inspect the quality of the imputations.

:::

Multiple imputation using Fully Conditional Specification (FCS) implemented by the MICE algorithm [@buuren2011]. Each variable has its own imputation model. Built-in imputation models are provided for continuous data (predictive mean matching, normal), binary data (logistic regression), unordered categorical data (polytomous logistic regression) and ordered categorical data (proportional odds). MICE can also impute continuous two-level data (normal model, pan, second-level variables). Passive imputation can be used to maintain consistency between variables. Various diagnostic plots are available to inspect the quality of the imputations.

{**mice**}: Multivariate Imputation by Chained Equations
:::

See also @pak-ggmice.

***
::::
:::::


## naniar

:::::{.my-package}
:::{.my-package-header}
naniar: Data Structures, Summaries, and Visualisations for Missing Data 
:::
::::{.my-package-container}

***

::: {#pak-naniar}

***

{**naniar**}: [https://github.com/njtierney/naniar](https://naniar.njtierney.com/) [@naniar]

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-naniar-min.png){width="176"}


{**naniar**} provides principled, tidy ways to summarise, visualise, and manipulate missing data with minimal deviations from the workflows in ggplot2 and tidy data.

:::

Missing values are ubiquitous in data and need to be explored and handled in the initial stages of analysis. {**naniar**} provides data structures and functions that facilitate the plotting of missing values and examination of imputations. This allows missing data dependencies to be  explored with minimal deviation from the common work patterns of 'ggplot2' and tidy data. The work is fully discussed in Tierney & Cook [-@tierney2023].

{**naniar**}: https://github.com/njtierney/naniar
:::


***
::::
:::::


## norm

:::::{.my-package}
:::{.my-package-header}
norm: Analysis of Multivariate Normal Datasets with Missing Values 
:::
::::{.my-package-container}

***

::: {#pak-norm}

***

{**norm**}: [Analysis of Multivariate Normal Datasets with Missing Values](https://cran.r-project.org/package=norm) [@norm]

(*There is no hexagon logo for {**norm**} available*)

An integrated set of functions for the analysis of multivariate normal datasets with missing values, including implementation of the EM algorithm, data augmentation, and multiple imputation.

{**norm**}: Analysis of Multivariate Normal Datasets with Missing Values
:::


***
::::
:::::

## plotly

:::::{.my-package}
:::{.my-package-header}
plotly: Create Interactive Web Graphics via 'plotly.js' 
:::
::::{.my-package-container}

***

::: {#pak-plotly}

***

{**plotly**}: [Create Interactive Web Graphics via 'plotly.js'](https://plotly.com/r/) [@plotly]

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-plotly-min.png){width="176"}

Create interactive web graphics from 'ggplot2' graphs and/or a custom interface to the (MIT-licensed) JavaScript library 'plotly.js' inspired by the grammar of graphics.

:::

Plotly.js is a standalone Javascript data visualization library, and it also powers the Python and R modules named plotly in those respective ecosystems (referred to as Plotly.py and Plotly.R).

Plotly.js can be used to produce dozens of chart types and visualizations, including statistical charts, 3D graphs, scientific charts, SVG and tile maps, financial charts and more.

{**plotly**}: Create Interactive Web Graphics via 'plotly.js'
:::

<Other text not included in the package reference>

***
::::
:::::
 


## skimr



:::::{.my-package}
:::{.my-package-header}
skimr: Compact and Flexible Summaries of Data
:::
::::{.my-package-container}

***

::: {#pak-skimr}

***

{**skimr**}: [Compact and Flexible Summaries of Data](https://docs.ropensci.org/skimr/)

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-skimr-min.png){width="176"}

A simple to use summary function that can be used with pipes and displays nicely in the console. The default summary statistics may be modified by the user as can the default formatting.  Support for data frames and vectors is included, and users can implement their own skim methods for specific object types as described in a vignette. Default summaries include support for inline spark graphs. Instructions for managing these on specific operating systems are given in the [Using skimr](https://docs.ropensci.org/skimr/articles/skimr.html) vignette and the [README](https://github.com/ropensci/skimr/#skimr-).


:::

At the moment I am just using the `skimr::skim()` function. I believe most of the many other functions for adaption are oriented to developers. But still: I need to have a closer look to this package.


A Package for Compact and Flexible Summaries of Data
:::

***
::::
:::::
